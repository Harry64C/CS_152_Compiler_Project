Terminals unused in grammar

   ARRAY
   FUNCTION
   EQ
   GTE
   LTE
   NEQ
   GT
   LT
   IF
   ELSE
   ELSE_IF
   WHILE
   BREAK
   CONTINUE
   READ
   WRITE
   RETURN
   NUMBER


State 0 conflicts: 1 reduce/reduce


Grammar

    0 $accept: prog_start $end

    1 prog_start: %empty
    2           | functions

    3 functions: %empty
    4          | function functions

    5 function: INTEGER IDENTIFIER BEGIN_PARAM arguments END_PARAM BEGIN_BODY statements END_BODY

    6 arguments: argument
    7          | argument COMMA arguments

    8 argument: %empty
    9         | INTEGER IDENTIFIER

   10 statements: %empty
   11           | statement SEMICOLON statements

   12 statement: declaration
   13          | assignment
   14          | function_call

   15 declaration: INTEGER IDENTIFIER
   16            | INTEGER IDENTIFIER ASSIGN equations

   17 assignment: IDENTIFIER ASSIGN equations

   18 equations: equations addop term
   19          | term

   20 addop: ADD
   21      | SUBTRACT

   22 term: term mulop factor
   23     | factor

   24 mulop: MULTIPLY
   25      | DIVISION
   26      | MOD

   27 factor: L_PAREN equations R_PAREN
   28       | INTEGER
   29       | IDENTIFIER
   30       | function_call

   31 function_call: IDENTIFIER BEGIN_PARAM params END_PARAM

   32 params: %empty
   33       | param
   34       | param COMMA params

   35 param: IDENTIFIER
   36      | INTEGER


Terminals, with rules where they appear

$end (0) 0
error (256)
INTEGER (258) 5 9 15 16 28 36
ARRAY (259)
FUNCTION (260)
ASSIGN (261) 16 17
ADD (262) 20
SUBTRACT (263) 21
MULTIPLY (264) 24
DIVISION (265) 25
MOD (266) 26
EQ (267)
GTE (268)
LTE (269)
NEQ (270)
GT (271)
LT (272)
BEGIN_BODY (273) 5
END_BODY (274) 5
BEGIN_PARAM (275) 5 31
END_PARAM (276) 5 31
L_PAREN (277) 27
R_PAREN (278) 27
IF (279)
ELSE (280)
ELSE_IF (281)
WHILE (282)
BREAK (283)
CONTINUE (284)
READ (285)
WRITE (286)
RETURN (287)
SEMICOLON (288) 11
COMMA (289) 7 34
NUMBER (290)
IDENTIFIER (291) 5 9 15 16 17 29 31 35


Nonterminals, with rules where they appear

$accept (37)
    on left: 0
prog_start (38)
    on left: 1 2, on right: 0
functions (39)
    on left: 3 4, on right: 2 4
function (40)
    on left: 5, on right: 4
arguments (41)
    on left: 6 7, on right: 5 7
argument (42)
    on left: 8 9, on right: 6 7
statements (43)
    on left: 10 11, on right: 5 11
statement (44)
    on left: 12 13 14, on right: 11
declaration (45)
    on left: 15 16, on right: 12
assignment (46)
    on left: 17, on right: 13
equations (47)
    on left: 18 19, on right: 16 17 18 27
addop (48)
    on left: 20 21, on right: 18
term (49)
    on left: 22 23, on right: 18 19 22
mulop (50)
    on left: 24 25 26, on right: 22
factor (51)
    on left: 27 28 29 30, on right: 22 23
function_call (52)
    on left: 31, on right: 14 30
params (53)
    on left: 32 33 34, on right: 31 34
param (54)
    on left: 35 36, on right: 33 34


State 0

    0 $accept: . prog_start $end

    INTEGER  shift, and go to state 1

    $end      reduce using rule 1 (prog_start)
    $end      [reduce using rule 3 (functions)]
    $default  reduce using rule 1 (prog_start)

    prog_start  go to state 2
    functions   go to state 3
    function    go to state 4


State 1

    5 function: INTEGER . IDENTIFIER BEGIN_PARAM arguments END_PARAM BEGIN_BODY statements END_BODY

    IDENTIFIER  shift, and go to state 5


State 2

    0 $accept: prog_start . $end

    $end  shift, and go to state 6


State 3

    2 prog_start: functions .

    $default  reduce using rule 2 (prog_start)


State 4

    4 functions: function . functions

    INTEGER  shift, and go to state 1

    $default  reduce using rule 3 (functions)

    functions  go to state 7
    function   go to state 4


State 5

    5 function: INTEGER IDENTIFIER . BEGIN_PARAM arguments END_PARAM BEGIN_BODY statements END_BODY

    BEGIN_PARAM  shift, and go to state 8


State 6

    0 $accept: prog_start $end .

    $default  accept


State 7

    4 functions: function functions .

    $default  reduce using rule 4 (functions)


State 8

    5 function: INTEGER IDENTIFIER BEGIN_PARAM . arguments END_PARAM BEGIN_BODY statements END_BODY

    INTEGER  shift, and go to state 9

    $default  reduce using rule 8 (argument)

    arguments  go to state 10
    argument   go to state 11


State 9

    9 argument: INTEGER . IDENTIFIER

    IDENTIFIER  shift, and go to state 12


State 10

    5 function: INTEGER IDENTIFIER BEGIN_PARAM arguments . END_PARAM BEGIN_BODY statements END_BODY

    END_PARAM  shift, and go to state 13


State 11

    6 arguments: argument .
    7          | argument . COMMA arguments

    COMMA  shift, and go to state 14

    $default  reduce using rule 6 (arguments)


State 12

    9 argument: INTEGER IDENTIFIER .

    $default  reduce using rule 9 (argument)


State 13

    5 function: INTEGER IDENTIFIER BEGIN_PARAM arguments END_PARAM . BEGIN_BODY statements END_BODY

    BEGIN_BODY  shift, and go to state 15


State 14

    7 arguments: argument COMMA . arguments

    INTEGER  shift, and go to state 9

    $default  reduce using rule 8 (argument)

    arguments  go to state 16
    argument   go to state 11


State 15

    5 function: INTEGER IDENTIFIER BEGIN_PARAM arguments END_PARAM BEGIN_BODY . statements END_BODY

    INTEGER     shift, and go to state 17
    IDENTIFIER  shift, and go to state 18

    $default  reduce using rule 10 (statements)

    statements     go to state 19
    statement      go to state 20
    declaration    go to state 21
    assignment     go to state 22
    function_call  go to state 23


State 16

    7 arguments: argument COMMA arguments .

    $default  reduce using rule 7 (arguments)


State 17

   15 declaration: INTEGER . IDENTIFIER
   16            | INTEGER . IDENTIFIER ASSIGN equations

    IDENTIFIER  shift, and go to state 24


State 18

   17 assignment: IDENTIFIER . ASSIGN equations
   31 function_call: IDENTIFIER . BEGIN_PARAM params END_PARAM

    ASSIGN       shift, and go to state 25
    BEGIN_PARAM  shift, and go to state 26


State 19

    5 function: INTEGER IDENTIFIER BEGIN_PARAM arguments END_PARAM BEGIN_BODY statements . END_BODY

    END_BODY  shift, and go to state 27


State 20

   11 statements: statement . SEMICOLON statements

    SEMICOLON  shift, and go to state 28


State 21

   12 statement: declaration .

    $default  reduce using rule 12 (statement)


State 22

   13 statement: assignment .

    $default  reduce using rule 13 (statement)


State 23

   14 statement: function_call .

    $default  reduce using rule 14 (statement)


State 24

   15 declaration: INTEGER IDENTIFIER .
   16            | INTEGER IDENTIFIER . ASSIGN equations

    ASSIGN  shift, and go to state 29

    $default  reduce using rule 15 (declaration)


State 25

   17 assignment: IDENTIFIER ASSIGN . equations

    INTEGER     shift, and go to state 30
    L_PAREN     shift, and go to state 31
    IDENTIFIER  shift, and go to state 32

    equations      go to state 33
    term           go to state 34
    factor         go to state 35
    function_call  go to state 36


State 26

   31 function_call: IDENTIFIER BEGIN_PARAM . params END_PARAM

    INTEGER     shift, and go to state 37
    IDENTIFIER  shift, and go to state 38

    $default  reduce using rule 32 (params)

    params  go to state 39
    param   go to state 40


State 27

    5 function: INTEGER IDENTIFIER BEGIN_PARAM arguments END_PARAM BEGIN_BODY statements END_BODY .

    $default  reduce using rule 5 (function)


State 28

   11 statements: statement SEMICOLON . statements

    INTEGER     shift, and go to state 17
    IDENTIFIER  shift, and go to state 18

    $default  reduce using rule 10 (statements)

    statements     go to state 41
    statement      go to state 20
    declaration    go to state 21
    assignment     go to state 22
    function_call  go to state 23


State 29

   16 declaration: INTEGER IDENTIFIER ASSIGN . equations

    INTEGER     shift, and go to state 30
    L_PAREN     shift, and go to state 31
    IDENTIFIER  shift, and go to state 32

    equations      go to state 42
    term           go to state 34
    factor         go to state 35
    function_call  go to state 36


State 30

   28 factor: INTEGER .

    $default  reduce using rule 28 (factor)


State 31

   27 factor: L_PAREN . equations R_PAREN

    INTEGER     shift, and go to state 30
    L_PAREN     shift, and go to state 31
    IDENTIFIER  shift, and go to state 32

    equations      go to state 43
    term           go to state 34
    factor         go to state 35
    function_call  go to state 36


State 32

   29 factor: IDENTIFIER .
   31 function_call: IDENTIFIER . BEGIN_PARAM params END_PARAM

    BEGIN_PARAM  shift, and go to state 26

    $default  reduce using rule 29 (factor)


State 33

   17 assignment: IDENTIFIER ASSIGN equations .
   18 equations: equations . addop term

    ADD       shift, and go to state 44
    SUBTRACT  shift, and go to state 45

    $default  reduce using rule 17 (assignment)

    addop  go to state 46


State 34

   19 equations: term .
   22 term: term . mulop factor

    MULTIPLY  shift, and go to state 47
    DIVISION  shift, and go to state 48
    MOD       shift, and go to state 49

    $default  reduce using rule 19 (equations)

    mulop  go to state 50


State 35

   23 term: factor .

    $default  reduce using rule 23 (term)


State 36

   30 factor: function_call .

    $default  reduce using rule 30 (factor)


State 37

   36 param: INTEGER .

    $default  reduce using rule 36 (param)


State 38

   35 param: IDENTIFIER .

    $default  reduce using rule 35 (param)


State 39

   31 function_call: IDENTIFIER BEGIN_PARAM params . END_PARAM

    END_PARAM  shift, and go to state 51


State 40

   33 params: param .
   34       | param . COMMA params

    COMMA  shift, and go to state 52

    $default  reduce using rule 33 (params)


State 41

   11 statements: statement SEMICOLON statements .

    $default  reduce using rule 11 (statements)


State 42

   16 declaration: INTEGER IDENTIFIER ASSIGN equations .
   18 equations: equations . addop term

    ADD       shift, and go to state 44
    SUBTRACT  shift, and go to state 45

    $default  reduce using rule 16 (declaration)

    addop  go to state 46


State 43

   18 equations: equations . addop term
   27 factor: L_PAREN equations . R_PAREN

    ADD       shift, and go to state 44
    SUBTRACT  shift, and go to state 45
    R_PAREN   shift, and go to state 53

    addop  go to state 46


State 44

   20 addop: ADD .

    $default  reduce using rule 20 (addop)


State 45

   21 addop: SUBTRACT .

    $default  reduce using rule 21 (addop)


State 46

   18 equations: equations addop . term

    INTEGER     shift, and go to state 30
    L_PAREN     shift, and go to state 31
    IDENTIFIER  shift, and go to state 32

    term           go to state 54
    factor         go to state 35
    function_call  go to state 36


State 47

   24 mulop: MULTIPLY .

    $default  reduce using rule 24 (mulop)


State 48

   25 mulop: DIVISION .

    $default  reduce using rule 25 (mulop)


State 49

   26 mulop: MOD .

    $default  reduce using rule 26 (mulop)


State 50

   22 term: term mulop . factor

    INTEGER     shift, and go to state 30
    L_PAREN     shift, and go to state 31
    IDENTIFIER  shift, and go to state 32

    factor         go to state 55
    function_call  go to state 36


State 51

   31 function_call: IDENTIFIER BEGIN_PARAM params END_PARAM .

    $default  reduce using rule 31 (function_call)


State 52

   34 params: param COMMA . params

    INTEGER     shift, and go to state 37
    IDENTIFIER  shift, and go to state 38

    $default  reduce using rule 32 (params)

    params  go to state 56
    param   go to state 40


State 53

   27 factor: L_PAREN equations R_PAREN .

    $default  reduce using rule 27 (factor)


State 54

   18 equations: equations addop term .
   22 term: term . mulop factor

    MULTIPLY  shift, and go to state 47
    DIVISION  shift, and go to state 48
    MOD       shift, and go to state 49

    $default  reduce using rule 18 (equations)

    mulop  go to state 50


State 55

   22 term: term mulop factor .

    $default  reduce using rule 22 (term)


State 56

   34 params: param COMMA params .

    $default  reduce using rule 34 (params)
